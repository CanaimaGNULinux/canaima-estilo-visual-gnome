#!/bin/bash -e
#
# ==============================================================================
# PAQUETE: canaima-estilo-visual
# ARCHIVO: postinst
# DESCRIPCIÓN: Configura el sistema despues la instalación del paquete.
# COPYRIGHT:
#  (C) 2010 Luis Alejandro Martínez Faneyth <martinez.faneyth@gmail.com>
#  (C) 2010 Diego Alberto Aguilera Zambrano <daguilera85@gmail.com>
#  (C) 2010 Carlos Alejandro Guerrero Mora <guerrerocarlos@gmail.com>
#  (C) 2010 Francisco Javier Vásquez Guerrero <franjvasquezg@gmail.com>
# LICENCIA: GPL3
# ==============================================================================
#
# Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo los
# términos de la Licencia Pública General de GNU (versión 3).

PKG="canaima-estilo-visual"
# Color Verde
VERDE="\e[1;32m"
# Color Rojo
ROJO="\e[1;31m"
# Color Amarillo
AMARILLO="\e[1;33m"
# Negrita
BOLD="\e[1m"
# Caracter de fin de línea
FIN="\e[0m"

function ERROR() {
echo -e ${ROJO}${1}${FIN}
exit 1
}

function ADVERTENCIA() {
echo -e ${AMARILLO}${1}${FIN}
}

function EXITO() {
echo -e ${VERDE}${1}${FIN}
}

case ${1} in

	configure)

	ADVERTENCIA "Migrando Grub a Burg ..."

	if [ -e /usr/sbin/update-grub ]; then
		mv /usr/sbin/update-grub /usr/sbin/update-grub.backup
		ln -s /usr/sbin/update-burg /usr/sbin/update-grub
	fi

	if [ -e /usr/sbin/update-grub2 ]; then
		mv /usr/sbin/update-grub2 /usr/sbin/update-grub2.backup
		ln -s /usr/sbin/update-burg /usr/sbin/update-grub2
	fi

	if [ $( cat /etc/kernel-img.conf | grep "postinst_hook = update-burg" | wc -l ) == 0 ];	then
		echo "postinst_hook = update-burg" >> /etc/kernel-img.conf
		echo "postrm_hook = update-burg" >> /etc/kernel-img.conf
	fi

	if [ -e /etc/default/burg ]; then
		sed -i 's/GRUB_GFXMODE=.*/GRUB_GFXMODE=1024x768/g' /etc/default/burg
		sed -i 's/GRUB_THEME=.*/GRUB_THEME=radiance/g' /etc/default/burg
		sed -i 's/GRUB_TIMEOUT=.*/GRUB_TIMEOUT=3/g' /etc/default/burg
	fi

	if [ -x $( which update-burg ) ]; then
		update-burg
		EXITO "GRUB migrado a BURG con éxito"
	fi

	if [ -x $( which update-gconf-defaults ) ]; then
		update-gconf-defaults
	fi

	# Para cada usuario en /home/ ...
	for usuario in /home/*? ; do

		# Obteniendo sólo el nombre del usuario
		usuario_min=$(basename ${usuario})

		# Y en caso de que el usuario sea un usuario activo (existente en /etc/shadow) ...
		case  $( grep "${usuario_min}:.*:.*:.*:.*:.*:::" /etc/shadow ) in

			'')
			# No hace nada si no se encuentra en /etc/shadow
			;;

			*)
				ADVERTENCIA "Renovando configuración del gconf ..."
				rm -rf ${usuario}/.gconf*
				killall gnome-panel
			;;
		esac
	done

	if [ -x /usr/share/update-notifier/notify-reboot-required ]; then
		/usr/share/update-notifier/notify-reboot-required
	fi

	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)

		ERROR "postinst no reconoce el argumento '"${1}"'" >&2
		exit 1

	;;

esac

#DEBHELPER#

exit 0
